{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","components/ChangeNotification.js","components/ErrorNotification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","name","number","handleName","handleNumber","addPerson","onSubmit","value","onChange","type","Person","personId","handleDelete","onClick","Persons","persons","query","rows","filter","person","toLowerCase","includes","map","key","id","style","listStyleType","Filter","handleQuery","ChangeNotification","message","className","ErrorNotification","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setQuery","changeMessage","setChangeMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","updatePerson","returnedPerson","p","setTimeout","catch","error","e","target","preventDefault","existingPerson","find","window","confirm","concat","toBeDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cc536a7.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ name, number, handleName,\n  handleNumber, addPerson }) => (\n    <form onSubmit={addPerson}>\n      <div>\n        Name: <input value={name} onChange={handleName} />\n      </div>\n      <div>Number: <input value={number} onChange={handleNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ name, number, personId, handleDelete }) => (\n  <li>{name} {number}<button onClick={() => handleDelete(personId)}>remove\n  </button></li>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, query, handleDelete }) => {\n  let toRender\n  if (query === '') {\n    toRender = persons\n  } else {\n    toRender = persons.filter(person =>\n      person.name.toLowerCase().includes(query))\n  }\n\n  const rows = toRender.map(person =>\n    <Person key={person.name} name={person.name} number={person.number}\n      personId={person.id} handleDelete={handleDelete} />)\n\n  return (\n    <ul style={{ listStyleType: \"none\" }}>\n      {rows}\n    </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ query, handleQuery }) => (\n  <div>\n    Search by name: <input value={query} onChange={handleQuery} />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst ChangeNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"changeNotification\">\n      {message}\n    </div>\n  )\n}\n\nexport default ChangeNotification","import React from 'react'\n\nconst ErrorNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"errorNotification\">\n      {message}\n    </div>\n  )\n}\n\nexport default ErrorNotification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deletePerson: deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport ChangeNotification from './components/ChangeNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [query, setQuery] = useState('')\n  const [changeMessage, setChangeMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = e => {\n    e.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    if (person.number === '') {\n      setErrorMessage(`Please input a number`)\n      setTimeout(() => setErrorMessage(null), 5000)\n      return\n    }\n    const existingPerson = persons.find(p => p.name === newName)\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already in the phonebook, replace their number with a new one?`)) {\n        updatePerson({ ...existingPerson, number: newNumber })\n      }\n    } else {\n      personService\n        .create(person)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setChangeMessage(`Added ${person.name}`)\n          setTimeout(() => setChangeMessage(null), 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => setErrorMessage(null), 5000)\n        })\n    }\n  }\n\n  const updatePerson = person => {\n    personService\n      .update(person.id, person)\n      .then(returnedPerson => {\n        setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setChangeMessage(`Updated ${person.name}`)\n        setTimeout(() => setChangeMessage(null), 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`Updating the information of ${person.name} has failed. It could have been already deleted.`)\n        setTimeout(() => setErrorMessage(null), 5000)\n        setPersons(persons.filter(p => (p.id !== person.id)))\n      })\n  }\n\n  const deletePerson = id => {\n    const toBeDeleted = persons.find(p => p.id === id)\n    if (!window.confirm(`Delete ${toBeDeleted.name}?`)) {\n      return\n    }\n    personService\n      .deletePerson(id)\n      .then(response => {\n        setPersons(persons.filter(person => (person.id !== id)))\n        setChangeMessage(`Deleted ${toBeDeleted.name}`)\n        setTimeout(() => setChangeMessage(null), 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`Information of ${toBeDeleted.name} has already been \n          removed from the server`)\n        setTimeout(() => setErrorMessage(null), 5000)\n        setPersons(persons.filter(p => (p.id !== toBeDeleted.id)))\n      })\n  }\n\n  const handleNameChange = e => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value.toLowerCase())\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter query={query} handleQuery={handleQueryChange} />\n      <ChangeNotification message={changeMessage} />\n      <ErrorNotification message={errorMessage} />\n      <h2>Add a new person</h2>\n      <PersonForm name={newName} number={newNumber}\n        handleName={handleNameChange} handleNumber={handleNumberChange}\n        addPerson={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} query={query} handleDelete={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}